import Head from "next/head"
import Image from "next/image"
import styles from "../styles/Home.module.css"
import { useState, useMemo } from "react"
import { indexer } from "../lib/crossbell"
import { useCombobox } from "downshift"
import { Input } from "../components/ui/Input"
import { MagnifyingGlassIcon } from "@heroicons/react/20/solid"
import type { CharacterEntity } from "crossbell.js"
import { debounce } from "underscore"
import Router from "next/router"

export default function Home() {
  const [items, setItems] = useState<CharacterEntity[]>([])
  const [value, setValue] = useState("")

  const searchChar = useMemo(() => {
    return debounce(async (inputValue?: string) => {
      if (!inputValue || inputValue.length < 3) {
        setItems([])
      } else {
        const result = await indexer.searchCharacters(inputValue, {
          limit: 5,
        })
        setItems(result.list)
      }
    }, 400)
  }, [])

  const {
    isOpen,
    getToggleButtonProps,
    getLabelProps,
    getMenuProps,
    getInputProps,
    highlightedIndex,
    getItemProps,
    selectedItem,
  } = useCombobox({
    async onInputValueChange({ inputValue }) {
      setValue(inputValue || "")
      searchChar(inputValue)
    },
    items,
    itemToString(item) {
      return item ? item.handle : ""
    },
    onSelectedItemChange({ selectedItem }) {
      if (selectedItem) {
        Router.push(`/${selectedItem?.handle}`)
      }
    },
  })

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          <Image
            alt="xChar"
            src="/crossbell.svg"
            className="w-250px h-68px"
            width={250}
            height={68}
            priority
          />
        </h1>
        <div className="font-medium mt-2">Characters on Crossbell</div>
        <div className="h-10 w-[580px] mt-10">
          <div
            className={`relative border-gray-300 border rounded-[20px] overflow-hidden hover:border-[#dfe1e5] hover:shadow-search ${
              isOpen && items.length ? "border-[#dfe1e5] shadow-search" : ""
            }`}
          >
            <Input
              className="w-full focus:border-gray-300 focus:ring-0 border-0 rounded-none"
              prefix={<MagnifyingGlassIcon className="w-5 h-5 text-gray-500" />}
              {...(getInputProps() as any)}
            />
            <>
              {isOpen && !!items.length && (
                <div className="border-t mx-5 border-gray-300"></div>
              )}
              <ul
                {...getMenuProps()}
                className={`left-0 top-full w-full ${
                  isOpen && items.length ? "pb-3" : ""
                }`}
              >
                {isOpen && items.length
                  ? items.map((item, index) => (
                      <li
                        key={item.handle}
                        {...getItemProps({
                          index,
                          item,
                          className: `${
                            highlightedIndex === index ? "bg-gray-100" : ""
                          } px-4 py-2 cursor-pointer`,
                          // style: {
                          //   backgroundColor:
                          //     highlightedIndex === index ? 'lightgray' : 'white',
                          //   fontWeight: selectedItem === item ? 'bold' : 'normal',
                          // },
                        })}
                      >
                        {item.handle}
                      </li>
                    ))
                  : null}
              </ul>
            </>
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
